@using MEMO_JOB.Views.Recruiters.Manage
@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills nav-stacked">
    <li class="@MEMO_JOB.Views.Recruiters.Manage.ManageNavPages.IndexNavClass(ViewContext)"><a asp-action="Index">Profile</a></li>
    <li class="@MEMO_JOB.Views.Recruiters.Manage.ManageNavPages.ChangePasswordNavClass(ViewContext)"><a asp-action="ChangePassword">Password</a></li>
    <li class="@MEMO_JOB.Views.Recruiters.Manage.ManageNavPages.CompanyIndexNavClass(ViewContext)"><a asp-action="CompanyIndex">Company</a></li>
    <li class="@MEMO_JOB.Views.Recruiters.Manage.ManageNavPages.RecruiterAccountManagementNavClass(ViewContext)"><a asp-action="RecruiterAccountManagement">Account Management</a></li>
    @if (hasExternalLogins)
    {
        <li class="@MEMO_JOB.Views.Recruiters.Manage.ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a asp-action="ExternalLogins">External logins</a></li>
    }
    <li class="@MEMO_JOB.Views.Recruiters.Manage.ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-action="TwoFactorAuthentication">Two-factor authentication</a></li>
</ul>

